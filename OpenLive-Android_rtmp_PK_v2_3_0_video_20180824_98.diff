diff --git a/app/src/main/java/io/agora/openlive/model/WorkerThread.java b/app/src/main/java/io/agora/openlive/model/WorkerThread.java
index 4c1d703..d79580c 100644
--- a/app/src/main/java/io/agora/openlive/model/WorkerThread.java
+++ b/app/src/main/java/io/agora/openlive/model/WorkerThread.java
@@ -12,6 +12,7 @@ import android.util.Log;
 import android.view.SurfaceView;
 import android.text.TextUtils;
 import io.agora.common.Constant;
+import io.agora.rtc.live.LiveTranscoding;
 import io.agora.openlive.R;
 import io.agora.rtc.Constants;
 import io.agora.rtc.RtcEngine;
@@ -20,6 +21,9 @@ import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
 import java.io.File;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.Map;
 
 public class WorkerThread extends Thread {
     private final static Logger log = LoggerFactory.getLogger(WorkerThread.class);
@@ -109,8 +113,11 @@ public class WorkerThread extends Thread {
         Looper.loop();
     }
 
-    private RtcEngine mRtcEngine;
-
+    private static RtcEngine mRtcEngine;
+    //add by longxin
+    public static int sLocalUid = (int)(System.currentTimeMillis()%10000000);
+    public static int sRemoteUid;
+    //add by longxin
     public final void joinChannel(final String channel, int uid) {
         if (Thread.currentThread() != this) {
             log.warn("joinChannel() - worker thread asynchronously " + channel + " " + uid);
@@ -123,13 +130,64 @@ public class WorkerThread extends Thread {
         }
 
         ensureRtcEngineReadyLock();
-        mRtcEngine.joinChannel(null, channel, "OpenLive", uid);
+        mRtcEngine.joinChannel(null, channel, "OpenLive", sLocalUid);
 
         mEngineConfig.mChannel = channel;
 
         log.debug("joinChannel " + channel + " " + uid);
     }
 
+    //add by longxin
+    public static void triggerRtmp(){
+        android.util.Log.v("longxin","sLocalUid:"+sLocalUid+" sRemoteUid:"+sRemoteUid);
+        LiveTranscoding liveTranscoding = new LiveTranscoding();
+
+        liveTranscoding.width = 1440;
+        liveTranscoding.height = 1280;
+        liveTranscoding.videoBitrate = 2500;
+        liveTranscoding.videoFramerate = 15;
+//        liveTranscoding.backgroundColor
+//        liveTranscoding.setBackgroundColor(255,0,0);
+        liveTranscoding.backgroundColor = 0xff0000;
+
+//        ArrayList<LiveTranscoding.TranscodingUser> transcodingUsers = new ArrayList<>(2) ;
+
+        Map<Integer, LiveTranscoding.TranscodingUser> transcodingUsers = new HashMap<>();
+
+        LiveTranscoding.TranscodingUser userLocal = new LiveTranscoding.TranscodingUser();
+        userLocal.uid = sLocalUid;
+        userLocal.x = 5;
+        userLocal.y = 5;
+        userLocal.width = 1440/2-10;
+        userLocal.height = 1280-10;
+        userLocal.zOrder = 1;
+        userLocal.alpha = 1;
+        userLocal.audioChannel = 0;
+
+        LiveTranscoding.TranscodingUser userRemote = new LiveTranscoding.TranscodingUser();
+        userRemote.uid = sRemoteUid;
+        userRemote.x = 1440/2+5;
+        userRemote.y = 5;
+        userRemote.width = 1440/2-10;
+        userRemote.height = 1280-10;
+        userRemote.zOrder = 1;
+        userRemote.alpha = 1;
+        userRemote.audioChannel = 0;
+
+        transcodingUsers.put(sLocalUid,userLocal);
+        transcodingUsers.put(sRemoteUid,userRemote);
+
+      //  liveTranscoding.transcodingUsers = transcodingUsers;
+          liveTranscoding.setUsers(transcodingUsers);
+//        liveTranscoding.userCount = transcodingUsers.size();
+
+        android.util.Log.v("longxin","setLiveTranscoding");
+        mRtcEngine.setLiveTranscoding(liveTranscoding);
+        mRtcEngine.addPublishStreamUrl("rtmp://vid-218.push.chinanetcenter.broadcastapp.agora.io/live/yimingym", true);
+    }
+
+    //add by longxin
+
     public final void leaveChannel(String channel) {
         if (Thread.currentThread() != this) {
             log.warn("leaveChannel() - worker thread asynchronously " + channel);
@@ -146,6 +204,8 @@ public class WorkerThread extends Thread {
 
         int clientRole = mEngineConfig.mClientRole;
         mEngineConfig.reset();
+        android.util.Log.v("longxin","removePublishStreamUrl");
+        mRtcEngine.removePublishStreamUrl("rtmp://vid-218.push.chinanetcenter.broadcastapp.agora.io/live/yimingym");
         log.debug("leaveChannel " + channel + " " + clientRole);
     }
 
diff --git a/app/src/main/java/io/agora/openlive/ui/LiveRoomActivity.java b/app/src/main/java/io/agora/openlive/ui/LiveRoomActivity.java
index 783d025..c37647f 100644
--- a/app/src/main/java/io/agora/openlive/ui/LiveRoomActivity.java
+++ b/app/src/main/java/io/agora/openlive/ui/LiveRoomActivity.java
@@ -26,6 +26,7 @@ import io.agora.openlive.R;
 import io.agora.openlive.model.AGEventHandler;
 import io.agora.openlive.model.ConstantApp;
 import io.agora.openlive.model.VideoStatusData;
+import io.agora.openlive.model.WorkerThread;
 import io.agora.rtc.Constants;
 import io.agora.rtc.RtcEngine;
 import io.agora.rtc.video.VideoCanvas;
@@ -243,6 +244,10 @@ public class LiveRoomActivity extends BaseActivity implements AGEventHandler {
 
     @Override
     public void onFirstRemoteVideoDecoded(int uid, int width, int height, int elapsed) {
+        android.util.Log.v("longxin","sRemoteUid:"+uid);
+        WorkerThread.sRemoteUid = uid;
+        WorkerThread.triggerRtmp();
+
     }
 
     private void doSwitchToBroadcaster(boolean broadcaster) {
diff --git a/app/src/main/res/values/strings_config.xml b/app/src/main/res/values/strings_config.xml
index a374080..cd85259 100644
--- a/app/src/main/res/values/strings_config.xml
+++ b/app/src/main/res/values/strings_config.xml
@@ -6,5 +6,5 @@
     <!-- After you entered the App ID, remove <##> outside of Your App ID -->
     <!-- For formal released project, please use Dynamic Key
         http://docs.agora.io/en/user_guide/Component_and_Others/Dynamic_Key_User_Guide.html -->
-    <string name="private_app_id"><#YOUR APP ID#></string>
+    <string name="private_app_id">82e4d31885164cf8bc834611b4972e68</string>
 </resources>
